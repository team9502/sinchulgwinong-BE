name: sinChul

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: gradlew bootJar
        run: ./gradlew bootJar
      - name: copy jar to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          source: "./build/libs/*.jar"
          target: "/home/ec2-user"
          strip_components: 2

      - name: SSH Commands
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ec2-user
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script_stop: true
          script: |
            export jdbc_url="${{ secrets.jdbc_url }}"
            export jdbc_username="${{ secrets.jdbc_username }}"
            export jdbc_password="${{ secrets.jdbc_password }}"
            export ENCRYPTION_SECRET_KEY="${{ secrets.ENCRYPTION_SECRET_KEY }}"
            export jwt_secretKey="${{ secrets.jwt_secretKey }}"
            export API_SERVICE_KEY="${{ secrets.API_SERVICE_KEY }}"

            # 환경 변수 확인
            echo "jdbc_url: $jdbc_url"
            echo "jdbc_username: $jdbc_username"
            echo "jdbc_password: $jdbc_password"
            echo "ENCRYPTION_SECRET_KEY: $ENCRYPTION_SECRET_KEY"
            echo "jwt_secretKey: $jwt_secretKey"
            echo "API_SERVICE_KEY: $API_SERVICE_KEY"

            # JAR 파일을 /home/ec2-user 디렉토리에서 실행
            nohup java -jar /home/ec2-user/*.jar > nohup.out 2>&1 &
        env:
          jdbc_url: ${{ secrets.jdbc_url }}
          jdbc_username: ${{ secrets.jdbc_username }}03
          jdbc_password: ${{ secrets.jdbc_password }}
          ENCRYPTION_SECRET_KEY: ${{ secrets.ENCRYPTION_SECRET_KEY }}
          jwt_secretKey: ${{ secrets.jwt_secretKey }}
          API_SERVICE_KEY: ${{ secrets.API_SERVICE_KEY }}
